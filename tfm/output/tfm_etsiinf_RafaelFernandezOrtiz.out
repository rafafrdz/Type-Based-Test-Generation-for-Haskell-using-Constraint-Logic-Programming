\BOOKMARK [0][-]{chapter*.3}{Acknowledgments}{}% 1
\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 2
\BOOKMARK [1][-]{section.1.1}{Testing}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.2}{Property-Based Testing}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.3}{Problem: Test cases that satisfy a given specification}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.4}{Our Approach}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.5}{Related Works}{chapter.1}% 7
\BOOKMARK [2][-]{subsection.1.5.1}{QuickCheck: Automatic testing of Haskell programs}{section.1.5}% 8
\BOOKMARK [2][-]{subsection.1.5.2}{ScalaCheck: Automatic testing of Scala and Java programs}{section.1.5}% 9
\BOOKMARK [2][-]{subsection.1.5.3}{PropEr: Property-based testing tool for Erlang}{section.1.5}% 10
\BOOKMARK [2][-]{subsection.1.5.4}{Hypothesis: Property-based testing tool for Python}{section.1.5}% 11
\BOOKMARK [1][-]{section.1.6}{Test Cases with Pre-Condition\(s\)}{chapter.1}% 12
\BOOKMARK [1][-]{section.1.7}{Thesis Organization}{chapter.1}% 13
\BOOKMARK [0][-]{chapter.2}{Preliminaries}{}% 14
\BOOKMARK [1][-]{section.2.1}{Haskell, the functional guy}{chapter.2}% 15
\BOOKMARK [2][-]{subsection.2.1.1}{Grammar specification}{section.2.1}% 16
\BOOKMARK [1][-]{section.2.2}{Prolog, the logical guy}{chapter.2}% 17
\BOOKMARK [2][-]{subsection.2.2.1}{Getting Started}{section.2.2}% 18
\BOOKMARK [2][-]{subsection.2.2.2}{Grammar specification}{section.2.2}% 19
\BOOKMARK [0][-]{chapter.3}{Syntax-Translation Mechanism}{}% 20
\BOOKMARK [1][-]{section.3.1}{Monomorphic Types}{chapter.3}% 21
\BOOKMARK [2][-]{subsection.3.1.1}{Primitive Types generators}{section.3.1}% 22
\BOOKMARK [2][-]{subsection.3.1.2}{Examples}{section.3.1}% 23
\BOOKMARK [1][-]{section.3.2}{Monomorphic Types with Boundaries}{chapter.3}% 24
\BOOKMARK [2][-]{subsection.3.2.1}{Examples}{section.3.2}% 25
\BOOKMARK [1][-]{section.3.3}{Polymorfism Types}{chapter.3}% 26
\BOOKMARK [2][-]{subsection.3.3.1}{Generic Polymorphic Types Generator}{section.3.3}% 27
\BOOKMARK [2][-]{subsection.3.3.2}{Polymorfism Types with Boundaries}{section.3.3}% 28
\BOOKMARK [2][-]{subsection.3.3.3}{Examples}{section.3.3}% 29
\BOOKMARK [2][-]{subsection.3.3.4}{Red-Black Tree}{section.3.3}% 30
\BOOKMARK [0][-]{chapter.4}{Conclusions and Future Works}{}% 31
\BOOKMARK [0][-]{section*.18}{Bibliography}{}% 32
\BOOKMARK [-1][-]{part*.20}{Appendix}{}% 33
\BOOKMARK [0][-]{appendix.A}{Prolog Code}{part*.20}% 34
\BOOKMARK [0][-]{appendix.B}{Translations}{part*.20}% 35
\BOOKMARK [1][-]{section.B.1}{Monomorphic Type}{appendix.B}% 36
\BOOKMARK [2][-]{subsection.B.1.1}{Syntax-Translation Function}{section.B.1}% 37
\BOOKMARK [2][-]{subsection.B.1.2}{MaybeInt}{section.B.1}% 38
\BOOKMARK [2][-]{subsection.B.1.3}{Either}{section.B.1}% 39
\BOOKMARK [2][-]{subsection.B.1.4}{MyListBool}{section.B.1}% 40
\BOOKMARK [2][-]{subsection.B.1.5}{BSTree}{section.B.1}% 41
\BOOKMARK [2][-]{subsection.B.1.6}{SomeWeird}{section.B.1}% 42
\BOOKMARK [2][-]{subsection.B.1.7}{RSTree}{section.B.1}% 43
\BOOKMARK [1][-]{section.B.2}{Monomorphic Type with Boundaries}{appendix.B}% 44
\BOOKMARK [2][-]{subsection.B.2.1}{Syntax-Translation Function}{section.B.2}% 45
\BOOKMARK [1][-]{section.B.3}{Polymorphic Type}{appendix.B}% 46
\BOOKMARK [2][-]{subsection.B.3.1}{Syntax-Translation Function}{section.B.3}% 47
